{"version":3,"names":[],"mappings":"","sources":["app.min.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n//functions\nvar Mapa = require('./functions/Mapa.js');\n\n//Events\nvar StartApplication = require('./events/StartApplication.js');\nrequire('./events/openModal.js');\nrequire('./events/deleteConfirmation.js');\n\n$.material.init();\n\nMapa.init();\n\nStartApplication();\n$(document).on('needs-application-restart', function(e) {\n  StartApplication();\n});\n\n},{\"./events/StartApplication.js\":2,\"./events/deleteConfirmation.js\":3,\"./events/openModal.js\":4,\"./functions/Mapa.js\":5}],2:[function(require,module,exports){\n//helpers\nvar dataTablesConfig = require('../helpers/dataTablesConfig.js');\n\n//functions\nvar makeSelectizeOnEach = require('../functions/makeSelectizeOnEach.js');\nvar makeDataTableOnEach = require('../functions/makeDataTableOnEach.js');\n\n//events\n\nfunction StartApplication() {\n  makeSelectizeOnEach();\n  makeDataTableOnEach();\n\n  \t//Função para deletar assistencia após aprovala e inseri-la no fusion tables\n\t$('[data-aprove-delete]').one(\"click\", function(e) {\n\t\tvar target = e.target;\n\t  \t//e.preventDefault();\n\t  \t//e.stopPropagation();\n\t  \tvar form = $(target).closest('form');\n\n\t\tvar url = $(target).data('aprove-delete');\n\t\t\n\t  \t$.ajax({\n\t      \turl: url,\n\t      \tdata: form.serialize(),\n\t      \tmethod: \"DELETE\",\n\t      \tsuccess: function(data) {\n\t      \t\tconsole.log('foi');\n\t      \t}\n    \t});\n\n\t});\n\n \t$('#hoursStart').timepicki();\n \t$('#hoursEnd').timepicki();\n}\n\n$.extend($.fn.dataTable.defaults, dataTablesConfig($('meta[name=locale]').prop('content')));\n\nmodule.exports = StartApplication;\n\n\n},{\"../functions/makeDataTableOnEach.js\":6,\"../functions/makeSelectizeOnEach.js\":7,\"../helpers/dataTablesConfig.js\":8}],3:[function(require,module,exports){\n//funcção para exibir modal de deletar\n$(document).on(\"click\", \"button[data-id]\", function(e) {\n  e.preventDefault();\n  e.stopPropagation();\n  var $button = $(e.target);\n  $button = $button[0].localName === 'button' ? $button : $button.closest('button[data-id]');\n\n  var submitForm = function() {\n\n    var form = 'form[data-id=' + $button.data('id') + ']';\n    var $form = $button.closest(form);\n    $form.submit();\n  };\n\n  $('#modal-delete')\n    .find('.btn-delete')\n    .one(\"click\", submitForm);\n\n  $('#modal-delete').modal('show');\n});\n\n},{}],4:[function(require,module,exports){\n//função para abrir modal\n$(document).on(\"click\", \"a[data-modal-open]\", function(e) {\n  var target = e.target;\n  var button = target.tagName.toLowerCase() == 'a' ? $(target) : $(target).closest('a');\n\n  e.preventDefault();\n  e.stopPropagation();\n\n  $(button.data('target') + ' .modal-dialog').load(button.data('href'), function() {\n    $(button.data('target')).modal('show');\n    $(document).trigger('needs-application-restart');\n  });\n\n});\n\n},{}],5:[function(require,module,exports){\nexports.init = function() {\n  \n//var map;\n//var infowindow;\n//var latlng;\n//var geocoder;\n//var circle;\n//var layer;\n//var rendererOptions;\n//var directionsDisplay;\n//var directionsService;\n//var markerMyLocation;\nvar tableId = '1aPLJfYAPlL3L2KVVC-FyZaspqnpv4MWK-dYpgbPS';\n\n\nwindow.initMap = function() {\n  latlng = new google.maps.LatLng(-20.642921,-47.225273); //minha casa\n  //console.log(JSON.stringify(latlng));\n  map = new google.maps.Map(document.getElementById('map'), {\n    center: latlng,\n    zoom: 9\n  });\n  \n  //directionsDisplay.setMap(map);\n\n}\n//obtem localização do usuario e centraliza mapa nela\nif (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      //se achou o local e o navegador suporta\n      var pos = { lat: position.coords.latitude, lng: position.coords.longitude };\n      var $address = $('#address');\n      //Atribui localização encontrada ao input de onde pesquisar\n      geocoder = new google.maps.Geocoder;\n      geocoder.geocode({'location': pos}, function(results, status) {\n        if (status === google.maps.GeocoderStatus.OK) {\n          if (results[1]) {\n            $address.val(results[1].formatted_address);\n            //console.log(results[1], results[1].address_components);\n            getEverythingAroundMe();\n          } else {\n            console.log('Local não encontrado!');\n          }\n        } else {\n          console.log('Geocoder failed due to: ' + status);\n        }\n      });\n\n      //centraliza mapa na posição encontrada\n      map.setCenter(pos);\n\n    }, function() {\n      // se não encontrou a localização de nois\n      console.log('Geolocation não autorizado ou com problemas');\n    });\n  } else {\n    // Browser doesn't support Geolocation\n    console.log('Navegador não suporta Geolocation');\n  }\n\n\n// Buscar todas as Assistências Na posição encontrada do user\nfunction getEverythingAroundMe() {\n  if (navigator.geolocation) {\n    navigator.geolocation.getCurrentPosition(function(position) {\n      //se achou o local e o navegador suporta\n      var pos = {\n        lat: position.coords.latitude,\n        lng: position.coords.longitude\n      };\n\n      //limpa tudo os trem antes de marcar os locais\n      clearMap();\n\n      //pesquisa todos os locais em volta..\n      markPlacesFromTables(pos);\n\n    }, function() {\n      // se não encontrou a localização de nois\n      console.log('Geolocation não altorizado ou com problemas');\n    });\n  } else {\n    // Browser doesn't support Geolocation\n    console.log('Navegador não suporta Geolocation');\n  }\n\n}\n\n//Busca tudo ao redor\n$('#js-everythingAroundMe').on('click', function() {\n  getEverythingAroundMe();\n});\n\nvar $form = $(\"#form-busca\");\n$form.submit(function(e) {\n  e.preventDefault();\n\n  var address = $('#address').val();\n  var radius = $('#radius').val() * 1000;\n  var category = $('#category').val();\n  var typeProduct = $('#typeProduct').val();\n  var brandsAttended = $('#brandsAttended').val();\n  geocoder = new google.maps.Geocoder;\n  geocoder.geocode( { 'address': address}, function(results, status) {\n    if (status == google.maps.GeocoderStatus.OK) {\n      var pos = JSON.stringify(results[0].geometry.location);\n      pos = JSON.parse(pos);\n\n      clearMap();\n      //pesquisa os locais em volta..\n      markPlacesFromTables(pos, category, typeProduct, brandsAttended, parseInt(radius));\n\n    } else {\n      console.log(\"Geocode was not successful for the following reason: \" + status);\n    }\n  \n  });\n});\n\n//limpa todos os trem do mapa\nfunction clearMap() {\n  if(typeof circle != \"undefined\") { \n    circle.setMap(null);\n  }\n  console.log(typeof layer);\n  if(typeof layer != \"undefined\") { \n    layer.setMap(null);\n  }\n  if(typeof markerMyLocation != \"undefined\") {  \n    markerMyLocation.setMap(null);\n  }\n\n  if(typeof directionsDisplay != \"undefined\") {\n    directionsDisplay.setMap(null);\n  }\n}\n\n  //marca e centraliza o usuario com a posição dada.\n  function tagMe(myLocation) {\n\n    map.setCenter(myLocation);\n    map.setZoom(11);\n    //fazer if para descobrir melhor zoom dependendo da area de cobertura\n\n    var image = 'https://cdn4.iconfinder.com/data/icons/map1/502/Untitled-11-48.png';\n    markerMyLocation = new google.maps.Marker({\n        map: map,\n        position: myLocation,\n        title: 'Minha Localização',\n        icon: image,\n    });\n\n    google.maps.event.addListener(markerMyLocation, 'click', function() {\n      infowindow = new google.maps.InfoWindow();\n      infowindow.setContent('Minha Localização');\n      console.log(this);\n      infowindow.open(map, this);\n    });  \n  }\n\n  function markPlacesFromTables(\n      myLocation,\n      category = null,\n      typeProduct = null,\n      brandsAttended = null,\n      radius = 50000\n    )\n  {\n    var searchCategory = category ? 'category like \\'' + category + '\\' and ' : '';\n    var searchTypeProduct = typeProduct ? 'typeProduct like \\'%' + typeProduct + '%\\' and ' : '';\n    var searchBrandsAttended = brandsAttended ? 'brandsAttended like \\'%' + brandsAttended + '%\\' and ' : '';\n    //console.log(searchCategory, searchTypeProduct, searchBrandsAttended);\n\n    //Cria o circulo azul mostrando a abrangencia da pesquisa\n    circle = new google.maps.Circle({\n      strokeColor: '#0000ff',\n      strokeOpacity: 0.4,\n      strokeWeight: 1,\n      fillColor: '#0000ff',\n      fillOpacity: 0.07,\n      map: map,\n      center: myLocation, \n      radius: radius\n    });\n\n    //camada  do fusion table\n    layer = new google.maps.FusionTablesLayer({\n      query: {\n        select: '\\'Location\\'',\n        from: tableId,\n        where:\n          searchCategory +\n          searchTypeProduct +\n          searchBrandsAttended +\n          ' ST_INTERSECTS(Location, CIRCLE(LATLNG('+\n            myLocation.lat + ',' + myLocation.lng + '), ' + radius +\n          '))'          \n      },\n      styles: [{\n          where: 'category like \\'AUTORIZADA\\'',\n          markerOptions: {\n            iconName: \"ylw_stars\",\n            zIndex:100\n          }\n        }, {\n          where: 'category like \\'ESPECIALIZADA\\'',\n          markerOptions: {\n            iconName: \"wht_blank\",\n            zIndex:99\n          }\n        }\n      ],\n      //suppressInfoWindows: true,\n      map: map\n    });\n\n    google.maps.event.addListener(circle, 'mouseover', function(e) {\n      circle.setVisible(false);\n    });\n\n    google.maps.event.addListener(map, 'mouseout', function(e) {\n\n      circle.setVisible(true);\n      //circle.setMap(map);\n    });\n\n    google.maps.event.addListener(layer, 'click', function(e) {\n\n      var end = e.row['Location'].value;\n\n      // Change the content of the InfoWindow\n      e.infoWindowHtml = \"<strong>Nome: </strong>\" + e.row['name'].value + \"<br>\";\n      e.infoWindowHtml += \"<strong>Endereço: </strong>\" + e.row['Location'].value + \"<br>\";\n      e.infoWindowHtml += \"<strong>Telefone: </strong>\" + e.row['fone'].value + \"<br>\";\n      //e.infoWindowHtml += \"Horario de funcionamento:\" + e.row['BusinessHoursDate'].value + \"<br>\";\n\n      e.infoWindowHtml += '<a onclick=\"calcRoute( &apos;'\n        + end\n        + '&apos;)\" id=\"makeRoute\" class=\"btn btn-success btn-sm\" title=\"Traçar rota\">Como chegar</a>';\n\n     /*\n      e.infoWindowHtml = e.row['Store Name'].value + \"<br>\";\n      // If the delivery == yes, add content to the window\n      if (e.row['delivery'].value == 'yes') {\n        e.infoWindowHtml += \"Delivers!\";\n      }*/\n    });\n      \n    //marcar posição do user.\n    tagMe(myLocation);\n\n  }\n\n  window.calcRoute = function(end) {\n    rendererOptions = {\n      //draggable: true\n    };\n    directionsDisplay = new google.maps.DirectionsRenderer(rendererOptions);\n    directionsService = new google.maps.DirectionsService();\n\n    directionsDisplay.setMap(map);\n    var enderecoPartida = markerMyLocation.getPosition();\n    //var enderecoPartida = $('#address').val();\n    var enderecoChegada = end;\n\n    var request = {\n      origin: enderecoPartida,\n      destination: enderecoChegada,\n      travelMode: google.maps.TravelMode.DRIVING,\n      provideRouteAlternatives: true // ativar rotas alternativas\n    };\n\n    directionsService.route(request, function(response, status) {\n      if (status == google.maps.DirectionsStatus.OK) {\n      directionsDisplay.setDirections(response);\n      }\n    });\n  }\n/*\n  //pesquisa pelo Places API\n  function placeSearch(myLocation) {\n    service = new google.maps.places.PlacesService(map);\n    //abrangencia das pesquisas e tamanho do circulo\n    var radius = 50000; \n\n    var scopeCircle = new google.maps.Circle({\n      strokeColor: '#0000ff',\n      strokeOpacity: 0.4,\n      strokeWeight: 1,\n      fillColor: '#0000ff',\n      fillOpacity: 0.07,\n      map: map,\n      center: myLocation,\n      radius: radius\n    });\n\n    var options = {\n      //bounds: map.getBounds(),\n      keyword: 'Assistência Técnica',\n      location: myLocation,\n      radius: radius,\n      types: ['establishment', 'electronics_store'],\n    };\n    //service.nearbySearch(options, callback); // locais proximos\n    service.radarSearch(options, callback);\n\n    function callback(results, status) {\n      if (status !== google.maps.places.PlacesServiceStatus.OK) {\n        console.error(status);\n        return;\n      }\n      for (var i = 0, result; result = results[i]; i++) {\n        addMarker(result);\n      }\n    }\n\n    function addMarker(place) {\n      var marker = new google.maps.Marker({\n        map: map,\n        position: place.geometry.location,\n        icon: {\n          url: 'https://cdn2.iconfinder.com/data/icons/snipicons/500/map-marker-48.png',\n          scaledSize: new google.maps.Size(25, 25)\n        }\n      });\n          service = new google.maps.places.PlacesService(map);\n      google.maps.event.addListener(marker, 'click', function() {\n        service.getDetails(place, function(result, status) {\n          if (status !== google.maps.places.PlacesServiceStatus.OK) {\n            console.error(status);\n            return;\n          }\n          console.log(result.types);\n          var tipos = result.types;\n          infowindow.setContent('Nome: ' + result.name + ' Tipo: ' + tipos.join(\" , \"));\n          infowindow.open(map, marker);\n          console.log(result);\n        }); \n      });\n    }\n\n  } //fim pesquisa pelo places api\n*/\n\n}\n\n},{}],6:[function(require,module,exports){\nfunction makeDataTableOnEach() {\n  var dataTableSelector = $('.data-table');\n  if (dataTableSelector.length) {\n    dataTableSelector.each(function(n, el) {\n      var options = {};\n      if (!el.classList.contains('dataTable')) {\n        if (el.dataset.checkboxTable == 'true') {\n          options = {\n            columnDefs: [{\n              \"targets\": 0,\n              \"orderable\": false\n            }],\n          };\n        }\n        //console.log('DataTables added on: #' + el.id);\n        $(el).DataTable(options);\n      }\n    });\n  }\n}\nmodule.exports = makeDataTableOnEach;\n\n},{}],7:[function(require,module,exports){\nfunction makeSelectizeOnEach() {\n  var selectizeSelector = $('[data-selectize]');\n  var options = {\n    maxItems: 1,\n    plugins: ['remove_button', 'restore_on_backspace'],\n    persist: false,\n  };\n  if (selectizeSelector.length) {\n    selectizeSelector.each(function(n, el) {\n\n      if (!el.selectize) {\n        if(el.multiple) {\n          options.maxItems = 99;\n\n          Object.assign(options, {\n            delimiter: ',,',\n            create: function(input) {\n              return {\n                value: input,\n                text: input\n              }\n            }\n          });\n\n        }\n        $(el).selectize(options);\n      }\n    });\n  }\n}\n\nmodule.exports = makeSelectizeOnEach;\n\n},{}],8:[function(require,module,exports){\nvar common = {\n  responsive: true,\n  order: []\n};\n\nvar configs = {\n  \"en-US\" : {\n    language: {\n      \"sEmptyTable\": \"No records found\",\n      \"sInfo\": \"Showing from _START_ to _END_ of _TOTAL_ records\",\n      \"sInfoEmpty\": \"Showing from 0 to 0 of 0 records\",\n      \"sInfoFiltered\": \"(Filtered of _MAX_ records)\",\n      \"sInfoPostFix\": \"\",\n      \"sInfoThousands\": \".\",\n      \"sLengthMenu\": \"Show _MENU_ results\",\n      \"sLoadingRecords\": \"Loading...\",\n      \"sProcessing\": \"Processing...\",\n      \"sZeroRecords\": \"No records found\",\n      \"sSearch\": \"Search: \",\n      \"oPaginate\": {\n        \"sNext\": \"Next\",\n        \"sPrevious\": \"Previous\",\n        \"sFirst\": \"First\",\n        \"sLast\": \"Last\"\n      },\n      \"oAria\": {\n        \"sSortAscending\": \": Sort columns ascending\",\n        \"sSortDescending\": \": Sort columns descending\"\n      }\n    }\n  },\n  \"pt-BR\": {\n    language: {\n      \"sEmptyTable\": \"Nenhum registro encontrado\",\n      \"sInfo\": \"Mostrando de _START_ até _END_ de _TOTAL_ registros\",\n      \"sInfoEmpty\": \"Mostrando 0 até 0 de 0 registros\",\n      \"sInfoFiltered\": \"(Filtrados de _MAX_ registros)\",\n      \"sInfoPostFix\": \"\",\n      \"sInfoThousands\": \".\",\n      \"sLengthMenu\": \"Mostrar _MENU_ resultados\",\n      \"sLoadingRecords\": \"Carregando...\",\n      \"sProcessing\": \"Processando...\",\n      \"sZeroRecords\": \"Nenhum registro encontrado\",\n      \"sSearch\": \"Pesquisar: \",\n      \"oPaginate\": {\n        \"sNext\": \"Próximo\",\n        \"sPrevious\": \"Anterior\",\n        \"sFirst\": \"Primeiro\",\n        \"sLast\": \"Último\"\n      },\n      \"oAria\": {\n        \"sSortAscending\": \": Ordenar colunas de forma ascendente\",\n        \"sSortDescending\": \": Ordenar colunas de forma descendente\"\n      }\n    }\n  }\n};\n\n\n\nmodule.exports = function(locale) {\n  return $.extend(common, configs[locale] || configs['en-US']);\n}\n},{}]},{},[1]);\n"],"file":"app.min.js","sourceRoot":"/source/"}